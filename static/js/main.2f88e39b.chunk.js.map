{"version":3,"sources":["components/TodoForm/TodoForm.styled.js","hooks/useCreateTodo.js","components/TodoForm/TodoForm.jsx","components/IconButton/IconButton.styled.js","components/IconButton/IconButton.jsx","components/TodoItem/TodoItem.styled.js","hooks/useDeleteTodo.js","components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.styled.js","components/TodoList/TodoList.jsx","components/Spinner/Spinner.styled.js","components/Spinner/Spinner.jsx","hooks/useFetchTodos.js","components/App.jsx","components/Providers.jsx","reportWebVitals.js","index.js"],"names":["Form","styled","form","Input","textarea","Button","button","createTodo","content","a","axios","post","response","data","TodoForm","queryClient","useQueryClient","useMutation","onSuccess","invalidateQueries","toast","success","mutateAsync","isCreating","isLoading","useCreateTodo","onSubmit","e","preventDefault","currentTarget","elements","value","reset","name","rows","autoFocus","type","disabled","SpinnerIcon","spinner","size","className","IconButton","Icon","icon","onClick","loading","ItemWrapper","div","Content","p","deleteTodo","id","delete","TodoItem","error","isDeleting","useDeleteTodo","FaTrash","List","li","TodoList","todos","map","todo","SpinnerWrapper","Spinner","color","height","width","fetchTodos","get","defaults","baseURL","App","useQuery","isFetchedAfterMount","useFetchTodos","position","QueryClient","Providers","children","client","initialIsOpen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f88e39b.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 600px;\n  padding: 16px;\n  margin: 0 auto;\n`;\n\nexport const Input = styled.textarea`\n  font: inherit;\n  width: 100%;\n  margin-bottom: 16px;\n  padding: 8px;\n  resize: none;\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  padding: 8px 12px;\n  margin: 0;\n  border: none;\n  border-radius: 4px;\n  background-color: #1890ff;\n  color: #fff;\n  font: inherit;\n  cursor: pointer;\n  &:hover {\n    background-color: #096dd9;\n  }\n\n  &:disabled {\n    background-color: #8c8c8c;\n    pointer-events: none;\n  }\n`;\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { useMutation } from 'react-query';\nimport { useQueryClient } from 'react-query';\n\nconst createTodo = async content => {\n  const response = await axios.post('/todos', { content });\n  return response.data;\n};\n\nexport const useCreateTodo = () => {\n  const queryClient = useQueryClient();\n  const { mutateAsync, isLoading } = useMutation(createTodo, {\n    onSuccess() {\n      //синхронизация данных в кеше с данными на беке, передаем ключ того, что хотим инвалидировать (в нашем случае '/todos')\n      queryClient.invalidateQueries('/todos');\n      toast.success('Todo created!');\n    },\n  });\n  return {\n    createTodo: mutateAsync,\n    isCreating: isLoading,\n  };\n};\n","import { Form, Input, Button } from './TodoForm.styled';\nimport { useCreateTodo } from 'hooks/useCreateTodo';\n\nexport const TodoForm = () => {\n  const { createTodo, isCreating } = useCreateTodo();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createTodo(e.currentTarget.elements.content.value);\n    e.currentTarget.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input name=\"content\" rows=\"3\" autoFocus />\n      <Button type=\"submit\" disabled={isCreating}>\n        Create todo\n      </Button>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\nimport { ImSpinner3 } from 'react-icons/im';\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  margin: 0;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background-color: transparent;\n  color: #1890ff;\n  &:hover {\n    background-color: #d9d9d9;\n  }\n`;\n\nconst Icon = ({ spinner }) => <ImSpinner3 size=\"24\" className={spinner} />;\n\nexport const SpinnerIcon = styled(Icon)`\n  animation: spin infinite 500ms linear;\n  @keyframes spin {\n    0% {\n      transform: rotate(0);\n    }\n\n    100% {\n      transform: rotate(1turn);\n    }\n  }\n`;\n","import { Button, SpinnerIcon } from './IconButton.styled';\n\nexport const IconButton = ({\n  icon: Icon,\n  onClick = () => null,\n  loading = false,\n}) => {\n  return (\n    <Button type=\"button\" onClick={onClick} disabled={loading}>\n      {loading ? <SpinnerIcon /> : <Icon size=\"16\" />}\n    </Button>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ItemWrapper = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  align-items: center;\n  justify-content: space-between;\n  gap: 16px;\n  padding: 4px 12px;\n  box-shadow: rgb(0 0 0 / 20%) 0px 2px 1px -1px,\n    rgb(0 0 0 / 14%) 0px 1px 1px 0px, rgb(0 0 0 / 12%) 0px 1px 3px 0px;\n`;\n\nexport const Content = styled.p`\n  margin: 0;\n  line-height: 1.5;\n`;\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { useMutation, useQueryClient } from 'react-query';\n\nconst deleteTodo = async id => {\n  const response = await axios.delete(`/todos/${id}`);\n  return response.data;\n};\n\nexport const useDeleteTodo = id => {\n  const queryClient = useQueryClient();\n  const { mutateAsync, isLoading } = useMutation(deleteTodo, {\n    onSuccess() {\n      queryClient.invalidateQueries('/todos');\n      toast.error('Todo deleted!');\n    },\n  });\n  return {\n    deleteTodo: mutateAsync,\n    isDeleting: isLoading,\n  };\n};\n","import { FaTrash } from 'react-icons/fa';\nimport { IconButton } from '../IconButton/IconButton';\nimport { ItemWrapper, Content } from './TodoItem.styled';\nimport { useDeleteTodo } from 'hooks/useDeleteTodo';\n\nexport const TodoItem = ({ id, content }) => {\n  const { deleteTodo, isDeleting } = useDeleteTodo();\n\n  return (\n    <ItemWrapper>\n      <Content>{content}</Content>\n      <IconButton\n        icon={FaTrash}\n        loading={isDeleting}\n        onClick={() => deleteTodo(id)}\n      />\n    </ItemWrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.li`\n  max-width: 1170px;\n  margin: 0 auto;\n  padding: 0 16px;\n  margin-top: 16px;\n  display: grid;\n  justify-content: center;\n  grid-template-columns: repeat(auto-fit, minmax(300px, max-content));\n  gap: 24px;\n`;\n","import { TodoItem } from '../TodoItem/TodoItem';\nimport { List } from './TodoList.styled';\n\nexport const TodoList = ({ todos }) => {\n  return (\n    <List>\n      {todos.map(todo => (\n        <TodoItem key={todo.id} {...todo} />\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 500px;\n`;\n","import Loader from 'react-loader-spinner';\nimport { SpinnerWrapper } from './Spinner.styled';\n\nexport const Spinner = () => {\n  return (\n    <SpinnerWrapper>\n      <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\n    </SpinnerWrapper>\n  );\n};\n","import axios from 'axios';\nimport toast, { Toaster } from 'react-hot-toast';\n// import { useRef } from 'react';\n// ----------------------------React Query\nimport { useQuery } from 'react-query';\n\nconst fetchTodos = async () => {\n  const response = await axios.get('/todos');\n  return response.data;\n};\n\nexport const useFetchTodos = () => {\n  // const hasFatched = useRef(false);\n  const { data, isLoading, isFetchedAfterMount } = useQuery(\n    '/todos',\n    fetchTodos,\n    {\n      onSuccess() {\n        if (!isFetchedAfterMount) {\n          toast.success('Todos loaded!');\n        }\n      },\n      // onSuccess() {\n      //   if (!hasFatched.current) {\n      //     toast.success('Todos loaded!');\n      //     hasFatched.current = true;\n      //   }\n      // },\n    },\n  );\n\n  return {\n    todos: data,\n    isLoading,\n  };\n};\n","import axios from 'axios';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { TodoForm } from './TodoForm/TodoForm';\nimport { TodoList } from './TodoList/TodoList';\nimport { Spinner } from './Spinner/Spinner';\nimport { useFetchTodos } from 'hooks/useFetchTodos';\n\naxios.defaults.baseURL = 'https://6182c42302f60a001775ceca.mockapi.io/mockapi/';\n\nexport const App = () => {\n  const { todos, isLoading } = useFetchTodos();\n\n  return (\n    <>\n      <TodoForm />\n      {isLoading && <Spinner />}\n      {!isLoading && todos && <TodoList todos={todos} />}\n      <Toaster position=\"top-right\" />\n    </>\n  );\n};\n","// ----------------------------React Query\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\n\nconst queryClient = new QueryClient();\n\nexport const Providers = ({ children }) => {\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n      <ReactQueryDevtools initialIsOpen />\n    </QueryClientProvider>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\nimport { Providers } from './components/Providers';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}